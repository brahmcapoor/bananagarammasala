{"version":3,"sources":["img/logo.png","SplashPage/SplashPage.js","LoadingSpinner/LoadingSpinner.js","constants.js","LetterPalette/LetterPalette.js","Clues/Clues.js","Victory/Victory.js","Game/Game.js","LevelSelect/LevelSelect.js","App.js","reportWebVitals.js","index.js"],"names":["SplashPage","props","useState","redirect","setRedirect","keyPressHandler","event","console","log","code","useEffect","document","addEventListener","to","className","src","logo","alt","LoadingSpinner","ALPHABET","API_URL","letters","split","LetterCount","letter","count","available","LetterPalette","letterCounts","letterComponents","forEach","index","push","HINT_SEPARATOR","getCharFreqs","str","reduce","counts","char","has","set","get","Map","mapDefaultGet","map","key","defaultVal","Answer","answer","callbacks","hasEnoughLetters","adjustCounts","gotAnswerCorrect","currentAnswer","setCurrentAnswer","hintAllowed","setHintAllowed","trySetText","value","toUpperCase","replace","test","changes","lastAnswer","lastCounts","currCounts","getChangesBetween","i","length","charAt","changesAreValid","resetHintTimer","setTimeout","type","onChange","target","disabled","onFocus","onBlur","icon","faCheckCircle","color","size","onClick","string","Math","random","faInfoCircle","Clue","clue","answerCallbacks","Clues","clues","clueStrs","BirthdayCongrats","title","width","height","frameBorder","allow","allowFullScreen","DefaultCongrats","Victory","birthday","getLetterCounts","Game","setClues","details","setDetails","numCluesUnlocked","setNumCluesUnlocked","numCorrect","setNumCorrect","setLetterCounts","isLoading","setIsLoading","clueSet","useParams","fetch","then","res","json","response","slice","catch","newLetterCounts","change","numLeft","num","word","Object","keys","getUnlockedLetterCountsChange","floor","min","Swal","fire","html","faQuestionCircle","LevelCard","clickHandler","imageFilename","process","attributeIcons","LevelSelect","clueSets","setClueSets","setClueSet","cluesets","cards","App","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26810516.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.86e7cd73.png\";","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./splashpage.css\";\nimport logo from \"../img/logo.png\";\n\nexport default function SplashPage(props) {\n  const [redirect, setRedirect] = useState(false);\n\n  const keyPressHandler = (event) => {\n    console.log(event);\n    if (event.code === \"Space\") {\n      setRedirect(true);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPressHandler);\n  }, []);\n\n  return redirect ? (\n    <Redirect to=\"/select\" />\n  ) : (\n    <div className=\"splashpage\">\n      <div className=\"title\">\n        B<span className=\"second\">A</span>\n        <span className=\"first\">N</span>\n        <span className=\"second\">A</span>\n        <span className=\"first\">N</span>\n        <span className=\"second\">A</span>G<span className=\"second\">A</span>\n        <span className=\"first\">R</span>\n        <span className=\"second\">A</span>\n        <span className=\"first\">M</span>\n        &nbsp; M<span className=\"second\">A</span>\n        <span className=\"first\">S</span>\n        <span className=\"second\">A</span>\n        <span className=\"first\">L</span>\n        <span className=\"second\">A</span>\n      </div>\n      <div className=\"logocontainer\">\n        <img src={logo} alt=\"Logo\" className=\"splash-logo\"></img>\n        <p className=\"startgame\">Press space to begin</p>\n      </div>\n    </div>\n  );\n}\n","import logo from \"../img/logo.png\";\nimport \"./loadingspinner.css\";\n\nexport default function LoadingSpinner() {\n  return <img src={logo} alt=\"loading\" className=\"spinner\"></img>;\n}\n","export const ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nexport const API_URL = \"https://bananagarammasala.herokuapp.com/\";\n","import \"./letterpalette.css\";\n\nconst letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n\nfunction LetterCount(props) {\n  const { letter, count } = props;\n  const available = count > 0 ? \"available\" : \"unavailable\";\n  return (\n    <div className={`letterbox ${available}`}>\n      {letter}\n      {count > 0 && <span className=\"circle\">{count}</span>}\n    </div>\n  );\n}\n\nexport default function LetterPalette(props) {\n  const { letterCounts } = props;\n\n  const letterComponents = [];\n  letters.forEach((letter, index) => {\n    letterComponents.push(\n      <LetterCount\n        key={letter}\n        letter={letter}\n        count={letterCounts[letter]}\n      ></LetterCount>\n    );\n  });\n\n  return <div className=\"palette\">{letterComponents}</div>;\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./clues.css\";\nimport { ALPHABET } from \"../constants\";\n\nconst HINT_PROBABILITY = 0.4;\nconst HINT_DELAY_MS = 1000;\nconst HINT_SEPARATOR = \"*\";\n\nfunction isAlpha(str) {\n  return /^[a-zA-Z\\*]*$/.test(str.replace(\" \", \"\"));\n}\n\nfunction getCharFreqs(str) {\n  return str.split(\"\").reduce((counts, char) => {\n    if (!counts.has(char)) {\n      counts.set(char, 0);\n    }\n    counts.set(char, counts.get(char) + 1);\n    return counts;\n  }, new Map());\n}\n\nfunction mapDefaultGet(map, key, defaultVal) {\n  return map.has(key) ? map.get(key) : defaultVal;\n}\n\nfunction getChangesBetween(lastAnswer, value) {\n  const lastCounts = getCharFreqs(lastAnswer);\n  const currCounts = getCharFreqs(value);\n\n  const changes = new Map();\n\n  ALPHABET.split(\"\").forEach((letter) => {\n    changes.set(\n      letter,\n      mapDefaultGet(currCounts, letter, 0) -\n        mapDefaultGet(lastCounts, letter, 0)\n    );\n  });\n\n  return changes;\n}\n\nfunction Answer(props) {\n  const {\n    answer,\n    callbacks: { hasEnoughLetters, adjustCounts, gotAnswerCorrect },\n  } = props;\n\n  const [currentAnswer, setCurrentAnswer] = useState(\"\");\n  const [hintAllowed, setHintAllowed] = useState(false);\n\n  const changesAreValid = (changes) => {\n    for (let i = 0; i < ALPHABET.length; i++) {\n      const letter = ALPHABET.charAt(i);\n      if (!hasEnoughLetters(letter, mapDefaultGet(changes, letter, 0))) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const trySetText = (value) => {\n    setHintAllowed(false);\n    value = value.toUpperCase();\n    if (isAlpha(value.replace(HINT_SEPARATOR, \"\"))) {\n      const changes = getChangesBetween(\n        currentAnswer.replace(\" \", \"\").replace(HINT_SEPARATOR, \"\"),\n        value.replace(\" \", \"\").replace(HINT_SEPARATOR, \"\")\n      );\n      if (changesAreValid(changes)) {\n        adjustCounts(changes);\n        setCurrentAnswer(value);\n        if (\n          value.replace(\" \", \"\").replace(HINT_SEPARATOR, \"\") ===\n          answer.replace(\" \", \"\").replace(HINT_SEPARATOR, \"\")\n        ) {\n          gotAnswerCorrect(value);\n        }\n      }\n    }\n  };\n\n  const resetHintTimer = () => {\n    setHintAllowed(false);\n    setTimeout(() => {\n      setHintAllowed(true);\n    }, HINT_DELAY_MS);\n  };\n\n  const makeHintStr = () => {\n    return answer.split(\"\").reduce((string, letter) => {\n      if (Math.random() < HINT_PROBABILITY) {\n        string += letter;\n      } else {\n        string += HINT_SEPARATOR;\n      }\n      return string;\n    }, \"\");\n  };\n\n  const getHint = () => {\n    trySetText(makeHintStr());\n    resetHintTimer();\n  };\n\n  return (\n    <div className=\"answerContainer\">\n      <input\n        type=\"text\"\n        value={currentAnswer}\n        onChange={(event) => trySetText(event.target.value)}\n        disabled={currentAnswer.replace(\" \", \"\") === answer.replace(\" \", \"\")}\n        onFocus={() => trySetText(\"\")}\n        onBlur={resetHintTimer}\n      />\n      {currentAnswer.replace(\" \", \"\") === answer.replace(\" \", \"\") ? (\n        <FontAwesomeIcon icon={faCheckCircle} color=\"green\" size=\"lg\" />\n      ) : (\n        hintAllowed && (\n          <i className=\"hintButton\" onClick={getHint}>\n            <FontAwesomeIcon\n              icon={faInfoCircle}\n              color=\"#aaa\"\n              size=\"lg\"\n            ></FontAwesomeIcon>\n          </i>\n        )\n      )}\n    </div>\n  );\n}\n\nfunction Clue(props) {\n  const { clue, answer, answerCallbacks } = props;\n\n  return (\n    <div className=\"clueContainer\">\n      <div className=\"clue\">{clue}</div>\n      <Answer\n        className=\"answer\"\n        answer={answer}\n        callbacks={answerCallbacks}\n      ></Answer>\n    </div>\n  );\n}\n\nexport default function Clues(props) {\n  const { clues, answerCallbacks } = props;\n  const clueStrs = [];\n  clues.forEach((clue, index) => {\n    clueStrs.push(\n      <Clue\n        key={index}\n        clue={clue.clue}\n        answer={clue.answer}\n        answerCallbacks={answerCallbacks}\n      />\n    );\n  });\n  return <div className=\"container\">{clueStrs}</div>;\n}\n","import \"./victory.css\";\nimport logo from \"../img/logo.png\";\n\nfunction BirthdayCongrats(props) {\n  return (\n    <div>\n      <h1>Happy Birthday, Melody!</h1>\n      <h2>We couldn't all wish you in person. We still wanted to try. </h2>\n      <iframe\n        title=\"video\"\n        width=\"560\"\n        height=\"315\"\n        src=\"https://www.youtube-nocookie.com/embed/brJfMWBTzjc?start=1\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n}\n\nfunction DefaultCongrats(props) {\n  return (\n    <div>\n      <img alt=\"BGM logo\" src={logo} className=\"logo\"></img>\n      <h1>You win!</h1>\n    </div>\n  );\n}\n\nexport default function Victory(props) {\n  return (\n    <div className=\"victorycard\">\n      {props.birthday ? <BirthdayCongrats /> : <DefaultCongrats />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Swal from \"sweetalert2\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\n\nimport { ALPHABET, API_URL } from \"../constants\";\nimport LetterPalette from \"../LetterPalette/LetterPalette\";\nimport Clues from \"../Clues/Clues\";\nimport \"./game.css\";\nimport Victory from \"../Victory/Victory\";\n\nconst INITIAL_CLUES_UNLOCKED = 3;\n\nfunction showInstructions() {\n  Swal.fire({\n    title: \"Welcome to BananaGaram Masala!\",\n    icon: \"question\",\n    width: \"70%\",\n    html: `\n      <p>\n        Each clue in the game corresponds to a word or short phrase, and your goal \n        is to figure out each of these solutions. \n      </p>\n      <p>\n        On the left side of the game board, you'll see the list of clues you've \n        unlocked, and text fields to enter your guess. Once you've solved a clue,\n        you'll no longer be able to change your guess.\n      </p>\n      <p>\n        On the right side of the game board, you'll see the letter pane. This pane \n        shows you how many of each letter you have available to solve the clues. \n        Each time you solve a clue, you'll unlock more clues and letters.\n      </p>\n      <p>\n        If you're stuck on a clue, click the grey question mark to its right to see \n        some of the letters in the answer. \n      </p>\n    `,\n  });\n}\n\nfunction getLetterCounts(clues) {\n  const counts = clues.reduce(\n    (counts, clue) => {\n      clue.answer.split(\"\").forEach((letter) => {\n        counts[letter] += 1;\n      });\n      return counts;\n    },\n    ALPHABET.split(\"\").reduce((counts, letter) => {\n      counts[letter] = 0;\n      return counts;\n    }, {})\n  );\n  return counts;\n}\n\nfunction getUnlockedLetterCountsChange(clues) {\n  const counts = getLetterCounts(clues);\n  return Object.keys(counts).reduce((changes, char) => {\n    changes.set(char, counts[char] * -1);\n    return changes;\n  }, new Map());\n}\n\nexport default function Game(props) {\n  const [clues, setClues] = useState([]);\n  const [details, setDetails] = useState(\"\");\n  const [numCluesUnlocked, setNumCluesUnlocked] = useState(\n    INITIAL_CLUES_UNLOCKED\n  );\n  const [numCorrect, setNumCorrect] = useState(0);\n  const [letterCounts, setLetterCounts] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { clueSet } = useParams();\n\n  useEffect(() => {\n    fetch(`${API_URL}/${clueSet}`)\n      .then((res) => res.json())\n      .then((response) => {\n        setClues(response.clues);\n        setLetterCounts(\n          getLetterCounts(response.clues.slice(0, INITIAL_CLUES_UNLOCKED))\n        );\n        setDetails(response.details);\n        setIsLoading(false);\n      })\n      .catch(console.log);\n  }, []);\n\n  const hasEnoughLetters = (letter, num) => letterCounts[letter] >= num;\n  const adjustCounts = (changes) => {\n    const newLetterCounts = { ...letterCounts };\n    changes.forEach((change, letter) => {\n      const numLeft = (letterCounts[letter] -= change);\n      newLetterCounts[letter] = numLeft;\n    });\n    setLetterCounts(newLetterCounts);\n  };\n  const gotAnswerCorrect = (word) => {\n    word = word.replace(\" \", \"\");\n    const changes = getUnlockedLetterCountsChange(\n      clues.slice(\n        numCluesUnlocked,\n        numCluesUnlocked + Math.floor(word.length / 2)\n      )\n    );\n    adjustCounts(changes);\n    setNumCluesUnlocked(\n      Math.min(numCluesUnlocked + Math.floor(word.length / 2), clues.length)\n    );\n    setNumCorrect(numCorrect + 1);\n  };\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  return numCorrect < clues.length ? (\n    <div className=\"gameboard\">\n      <div className=\"details\">{details}</div>\n      <div className=\"gameContainer\">\n        <div className=\"clues\">\n          <Clues\n            clues={clues.slice(0, numCluesUnlocked)}\n            answerCallbacks={{\n              hasEnoughLetters,\n              adjustCounts,\n              gotAnswerCorrect,\n            }}\n          ></Clues>\n        </div>\n        <div className=\"letters\">\n          <LetterPalette letterCounts={letterCounts}></LetterPalette>\n        </div>\n      </div>\n      <i className=\"help\" onClick={() => showInstructions()}>\n        <FontAwesomeIcon icon={faQuestionCircle} color=\"#333\" size=\"lg\" />\n      </i>\n    </div>\n  ) : (\n    <Victory birthday={clueSet === \"birthday\"} />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { API_URL } from \"../constants\";\nimport Swal from \"sweetalert2\";\nimport \"./levelselect.css\";\n\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\n\nfunction formatName(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction LevelCard(props) {\n  const { clueSet, clickHandler } = props;\n  const imageFilename = `${process.env.PUBLIC_URL}/${clueSet}.png`;\n\n  return (\n    <div className=\"cardContainer\" onClick={clickHandler}>\n      <div className=\"cardContainerInner\">\n        <div className=\"cardFront\">\n          <img className=\"levelImage\" src={imageFilename} alt=\"{clueSet}\"></img>\n        </div>\n        <div className=\"cardBack\">\n          <div className=\"clueSetTitle\">{formatName(clueSet)}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction attributeIcons() {\n  Swal.fire({\n    title:\n      \"I'm not artistic enough to make those icons, so I have these people to thank:\",\n    html:\n      \"<ul>\" +\n      '<li><a href=\"https://www.flaticon.com/authors/photo3idea-studio\" title=\"photo3idea_studio\">photo3idea_studio</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></li>' +\n      '<li><a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></li>' +\n      '<li><a href=\"https://www.flaticon.com/authors/turkkub\" title=\"turkkub\">turkkub</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></li>' +\n      \"</ul>\",\n    width: 800,\n  });\n}\n\nexport default function LevelSelect() {\n  const [clueSets, setClueSets] = useState([]);\n  const [clueSet, setClueSet] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${API_URL}/cluesets`)\n      .then((res) => res.json())\n      .then((response) => {\n        setClueSets(response.cluesets);\n        setIsLoading(false);\n      })\n      .catch(console.log);\n  }, []);\n\n  const cards = clueSets.reduce((cards, clueSet) => {\n    cards.push(\n      <LevelCard clueSet={clueSet} clickHandler={() => setClueSet(clueSet)} />\n    );\n    return cards;\n  }, []);\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  return clueSet ? (\n    <Redirect to={`/play/${clueSet}`}></Redirect>\n  ) : (\n    <div className=\"levelselectcontainer\">\n      <div className=\"cardsContainer\">{cards}</div>\n      <button className=\"attributions\" onClick={attributeIcons}>\n        Attributions\n      </button>\n    </div>\n  );\n}\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport SplashPage from \"./SplashPage/SplashPage\";\nimport Game from \"./Game/Game\";\nimport LevelSelect from \"./LevelSelect/LevelSelect\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/play/:clueSet\">\n            <Game />\n          </Route>\n          <Route path=\"/select\">\n            <LevelSelect />\n          </Route>\n          <Route path=\"/\">\n            <SplashPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}